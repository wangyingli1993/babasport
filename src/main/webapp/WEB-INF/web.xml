<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://java.sun.com/xml/ns/j2ee" xmlns:javaee="http://java.sun.com/xml/ns/javaee"
         xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
         xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd"
         id="WebApp_ID" version="2.4">

    <!-- 加载spring容器 -->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath:spring/applicationContext-*.xml</param-value>
    </context-param>
    <!-- 加载spring容器需要配置一个监听器 -->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>

    <!-- springmvc配置，前台 -->
    <servlet>
        <servlet-name>springMVC-front</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <!--contextConfigLocation用来配置springMVC加载的配置文件（用来配置HandlerMapping, HandlerAdapter, etc)-->
        <!--若不配置contextConfigLocation, 默认加载 /WEB-INF/servlet名称-servlet.xml文件（这里即为springMVC-servlet.xml）-->
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:spring/springMVC-front.xml</param-value>
        </init-param>
        <!--值大于等于0表示启动服务器时加载，值越小优先级越高-->
        <load-on-startup>1</load-on-startup>
        <!--异步支持，springmvc高性能的关键，servlet3.0后才有-->
        <!--<async-supported>true</async-supported>-->
    </servlet>

    <!--第一种：*.action, 访问以.action结尾的地址，由DispatcherServlet进行解析-->
    <!--第二种：/ ， 所有访问的地址都有由DispatcherServlet进行解析，对于静态文件（无需和后台进行交互）的解析需要配置不让由DispatcherServlet进行解析-->
    <!--使用此种方法可以实现RESTful风格的url-->
    <!--第三种：/* ，这种配置不对，使用这种配置，最终要转发到一个jsp页面时，仍然会由由DispatcherServlet解析jsp地址，不能根据jsp页面找到handler，会报错。-->
    <servlet-mapping>
        <servlet-name>springMVC-front</servlet-name>
        <url-pattern>*.shtml</url-pattern>
    </servlet-mapping>

    <!-- springmvc配置，后台 -->
    <servlet>
        <servlet-name>springMVC-back</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:spring/springMVC-front.xml</param-value>
        </init-param>
    </servlet>

    <servlet-mapping>
        <servlet-name>springMVC-back</servlet-name>
        <url-pattern>*.do</url-pattern>
    </servlet-mapping>

    <!--解决post乱码-->
    <filter>
        <filter-name>CharacterEncodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>utf-8</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>CharacterEncodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
</web-app>
        